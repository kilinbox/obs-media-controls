cmake_minimum_required(VERSION 3.18)
project(media-controls VERSION 0.3.4)
set(PROJECT_FULL_NAME "Media Controls")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/version.h.in ${CMAKE_CURRENT_SOURCE_DIR}/version.h)

find_package(Qt5Widgets)

set(CMAKE_AUTOMOC ON)

set(media-controls_HEADERS
    media-controls.hpp
    media-control.hpp
    media-slider.hpp
	${CMAKE_SOURCE_DIR}/UI/slider-absoluteset-style.hpp
	version.h)

set(media-controls_SOURCES
    media-slider.cpp
    media-controls.cpp
    media-control.cpp
	${CMAKE_SOURCE_DIR}/UI/slider-absoluteset-style.cpp)

if(WIN32)
	get_filename_component(ISS_FILES_DIR "${CMAKE_BINARY_DIR}\\..\\package" ABSOLUTE)
	file(TO_NATIVE_PATH "${ISS_FILES_DIR}" ISS_FILES_DIR)
	get_filename_component(ISS_PACKAGE_DIR "${CMAKE_PACKAGE_PREFIX}\\.." ABSOLUTE)
	file(TO_NATIVE_PATH "${ISS_PACKAGE_DIR}" ISS_PACKAGE_DIR)
	get_filename_component(ISS_SOURCE_DIR "${PROJECT_SOURCE_DIR}" ABSOLUTE)
	file(TO_NATIVE_PATH "${ISS_SOURCE_DIR}" ISS_SOURCE_DIR)
	configure_file("installer.iss.in"
			"${PROJECT_BINARY_DIR}/installer.iss"
		)
	configure_file(resource.rc.in media-controls.rc)
	list(APPEND media-controls_SOURCES
		media-controls.rc)
endif()


qt5_wrap_ui(media-controls_UI_HEADERS MediaControls.ui)

add_library(media-controls MODULE
	${media-controls_HEADERS}
	${media-controls_SOURCES}
	${media-controls_UI_HEADERS})

target_link_libraries(media-controls
	obs-frontend-api
	Qt5::Widgets
	libobs)

target_include_directories(media-controls PRIVATE
        "${CMAKE_SOURCE_DIR}/UI/obs-frontend-api")
set_target_properties(media-controls PROPERTIES FOLDER "plugins/exeldro")
install_obs_plugin_with_data(media-controls data)
